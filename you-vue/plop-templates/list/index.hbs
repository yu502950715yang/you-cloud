{{#if template}}
<template>
  <div class="app-container">
    <z-card style="height: auto">
      <el-form ref="searchForm" :model="table.searchForm" label-width="80px">
        <el-row :gutter="20">
          <el-col :span="8" class="form-item-height">
            <el-form-item label="测试列">
              <el-input v-model="table.searchForm.testCol" />
            </el-form-item>
          </el-col>
          <el-col :span="8">
            <div class="form-item-btnGroup">
              <el-button v-waves class="filter-item" type="primary" icon="el-icon-search" @click="search">
                搜索
              </el-button>
              <el-button v-waves class="filter-item" style="margin-left: 10px;" type="primary" icon="el-icon-edit" @click="add">
                新增
              </el-button>
            </div>
          </el-col>
        </el-row>
      </el-form>
    </z-card>
    <z-card>
      <el-table
        :data="table.pageData"
        style="width: 100%"
        :default-sort="{prop: 'date', order: 'descending'}"
        border
        fit
        highlight-current-row
      >
        <el-table-column
          prop="testCol"
          label="测试列"
        />
        <el-table-column label="操作" align="center" class-name="small-padding fixed-width" width="180">
          <template slot-scope="{row}">
            <el-button v-waves type="primary" size="mini" @click="edit(row)">
              编辑
            </el-button>
            <el-button v-waves type="danger" size="mini" @click="remove(row)">
              删除
            </el-button>
          </template>
        </el-table-column>
      </el-table>
      <div class="block">
        <el-pagination
          background
          layout="total, prev, pager, next"
          :total="table.total"
          :current-page="table.currentPage"
          style="margin-top: 15px"
          @current-change="pageChange"
        />
      </div>
    </z-card>
    <modal
      v-if="modal.dialogFormVisible"
      :dialog-form-visible="modal.dialogFormVisible"
      :dialog-operate="modal.dialogOperate"
      :row-data="modal.data"
      @form-visible="formVisible"
      @save="save"
    />
  </div>
</template>
{{/if}}

{{#if script}}
<script>
import ZCard from '@/components/Cardarea'
import Modal from './modal'

const HandleType = Object.freeze({
  ADD: Symbol('add'),
  UPDATE: Symbol('update')
})

export default {
  name: '{{ properCase name }}',
  components: {
    Modal,
    ZCard
  },
  props: {},
  data() {
    return {
      table: {
        searchForm: {
          testCol: ''
        },
        pageData: [],
        total: 0,
        currentPage: 1
      },
      modal: {
        dialogFormVisible: false,
        handleType: Symbol(),
        dialogOperate: '',
        data: {}
      }
    }
  },
  created() {},
  mounted() {},
  methods: {
    formVisible() {
      this.modal.data = {}
      this.modal.dialogFormVisible = false
    },
    pageChange(condition) {
      // todo 调用获取列表api(完成后请删除todo)
      /*
        api(condition).then(res => {
          const { pageData, total } = res.data
          this.table.pageData = pageData
          this.table.total = total
        }).catch(err => {
          this.$alert(err)
        })
       */
    },
    edit(row) {
      this.modal.data = Object.assign({}, this.modal.data, row) // copy obj
      this.modal.handleType = HandleType.UPDATE
      this.modal.dialogOperate = '编辑'
      this.modal.dialogFormVisible = true
    },
    remove(row) {
      this.$confirm('确定删除此条记录?', '提示', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(() => {
        // todo 接入删除api(完成后请删除todo)
        /*
        api().then(res => {
            this.$message({
              type: 'success',
              message: '删除成功!'
            })
        }).catch(err => {
          this.$alert(err)
        })
       */
      }).catch(() => {
        this.$message({
          type: 'info',
          message: '已取消删除'
        })
      })
    },
    add() {
      this.modal.dialogFormVisible = true
      this.modal.handleType = HandleType.ADD
      this.modal.dialogOperate = '新增'
    },
    search() {
      this.pageChange(this.table.searchForm)
    },
    save(data) {
      if (this.modal.handleType === HandleType.ADD) {
        // todo 调用保存api(完成后请删除todo)
        /*
        api(data).then(res => {
            this.$message({
              type: 'success',
              message: '提交成功!'
            })
            this.formVisible()
        }).catch(err => {
          this.$alert(err)
        })
         */
      }
      if (this.modal.handleType === HandleType.UPDATE) {
        // 同新增
      }
    }
  }
}
</script>
{{/if}}

{{#if style}}
<style lang="scss" scoped>
.el-form-item{
  margin: 10px 0;
}
.el-form{
  height: auto;
  overflow: hidden;
}
.form-item-height{
  height: 60px;
}
.form-item-btnGroup{
  margin-left: 10px;
  margin-top: 15px
}
</style>
{{/if}}
